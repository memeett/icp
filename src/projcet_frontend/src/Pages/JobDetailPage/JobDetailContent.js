import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion } from "framer-motion";
import { Info } from "lucide-react";
export const JobDetailContent = ({ job, currentApplicants, maxApplicants, acceptedAppliers, onOpen, }) => {
    // const [showAcceptedUsersModal, setShowAcceptedUsersModal] = useState(false);
    const mockAcceptedUsers = acceptedAppliers;
    return (_jsxs("div", { className: "lg:col-span-2 bg-white/90 backdrop-blur-md rounded-2xl shadow-2xl p-8", children: [_jsxs("div", { className: "mb-8", children: [_jsx(motion.h1, { className: "text-3xl font-bold text-indigo-800 mb-4", initial: { x: -20, opacity: 0 }, animate: { x: 0, opacity: 1 }, children: job.jobName }), _jsx("div", { className: "mt-8 border-t pt-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold text-indigo-800 mb-2", children: "Current Applicants" }), _jsxs("p", { className: "text-gray-600", children: [acceptedAppliers.length, " / ", maxApplicants.toString(), " positions filled"] })] }), _jsxs(motion.div, { className: "flex -space-x-3 cursor-pointer", onClick: onOpen, whileHover: { scale: 1.05 }, children: [mockAcceptedUsers.slice(0, 3).map((user, index) => (_jsx("div", { className: "w-10 h-10 rounded-full border-2 border-white bg-gradient-to-r from-cyan-400 to-blue-500 flex items-center justify-center text-white font-bold", style: { zIndex: 3 - index }, children: user.username.charAt(0).toUpperCase() }, user.id))), mockAcceptedUsers.length > 3 && (_jsxs("div", { className: "w-10 h-10 rounded-full border-2 border-white bg-indigo-500 flex items-center justify-center text-white text-sm", children: ["+", mockAcceptedUsers.length - 3] }))] })] }) })] }), _jsxs(motion.div, { className: "mb-8 bg-blue-50/30 p-6 rounded-xl", initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.3 }, children: [_jsxs("h2", { className: "text-xl font-semibold text-indigo-800 mb-4 flex items-center gap-2", children: [_jsx(Info, { className: "w-5 h-5 text-indigo-500" }), "Job Description"] }), _jsx("ul", { className: "list-disc pl-6 space-y-2 text-gray-700", children: job.jobDescription.map((desc, index) => (_jsx("li", { children: desc }, index))) })] })] }));
};
