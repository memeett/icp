import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion } from "framer-motion";
export const JobSalaryStep = ({ jobSalary, setJobSalary, error, }) => (_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, className: "space-y-6", children: [_jsxs("div", { className: "space-y-2", children: [_jsx("h2", { className: "text-3xl font-bold bg-gradient-to-r from-pink-600 to-red-500 bg-clip-text text-transparent", children: "\uD83D\uDCB0 Salary Per Candidate" }), _jsx("p", { className: "text-gray-600", children: "Specify the total compensation for each selected candidate." })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "p-4 rounded-xl bg-gradient-to-r from-red-100 to-pink-200 border-2 border-pink-100", children: [_jsx("p", { className: "text-sm text-pink-700 mb-2", children: "\uD83D\uDCA1 Common examples:" }), _jsxs("ul", { className: "list-disc list-inside space-y-1 text-pink-800", children: [_jsx("li", { children: "Short-term project: $500 - $5,000" }), _jsx("li", { children: "Monthly contract: $3,000 - $10,000" }), _jsx("li", { children: "Full-time position: $50,000 - $150,000+" })] })] }), _jsxs("div", { className: "relative", children: [_jsx("span", { className: "absolute left-4 top-1/2 -translate-y-1/2 text-gray-500", children: "$" }), _jsx("input", { type: "number", min: 0, value: jobSalary?.toString() || "", onChange: (e) => setJobSalary(e.target.valueAsNumber || null), className: `w-full p-4 pl-10 rounded-xl border-2 focus:border-transparent focus:ring-4 ${error
                                ? "border-red-400 focus:ring-red-300/30"
                                : "border-gray-200 focus:ring-blue-300/30"} bg-white/90 backdrop-blur-sm transition-all duration-300 shadow-sm hover:shadow-md`, placeholder: "e.g., 5000 for a $5,000 project" })] }), error && _jsx("p", { className: "text-red-500 mt-2", children: error })] })] }));
